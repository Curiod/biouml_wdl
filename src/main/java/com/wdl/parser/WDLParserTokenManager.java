/* WDLParserTokenManager.java */
/* Generated By:JJTree&JavaCC: Do not edit this line. WDLParserTokenManager.java */
package com.wdl.parser;
import java.io.Reader;
import java.io.StringReader;
import java.util.logging.Level;
import java.util.logging.Logger;

/** Token Manager. */
@SuppressWarnings ("unused")
public class WDLParserTokenManager implements WDLParserConstants {
        int prevLexState;
        int braceLevel = 0;
        boolean isHeredoc = false;

  /** Debug output. */
  public  java.io.PrintStream debugStream = System.out;
  /** Set debug output. */
  public  void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }
private final int jjStopStringLiteralDfa_0(int pos, long active0, long active1){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x4000000L) != 0L)
         {
            jjmatchedKind = 65;
            return 287;
         }
         if ((active0 & 0x400000060000000L) != 0L)
         {
            jjmatchedKind = 65;
            return 106;
         }
         if ((active0 & 0x2000000L) != 0L)
         {
            jjmatchedKind = 65;
            return 43;
         }
         if ((active0 & 0x80L) != 0L)
         {
            jjmatchedKind = 65;
            return 242;
         }
         if ((active0 & 0x10000000L) != 0L)
         {
            jjmatchedKind = 65;
            return 37;
         }
         if ((active0 & 0x2000000080000L) != 0L)
         {
            jjmatchedKind = 65;
            return 86;
         }
         if ((active0 & 0x300000409d1f700L) != 0L)
         {
            jjmatchedKind = 65;
            return 365;
         }
         if ((active0 & 0x180000000L) != 0L)
         {
            jjmatchedKind = 65;
            return 194;
         }
         if ((active0 & 0x200000040L) != 0L)
         {
            jjmatchedKind = 65;
            return 310;
         }
         if ((active0 & 0x60000L) != 0L)
         {
            jjmatchedKind = 65;
            return 293;
         }
         return -1;
      case 1:
         if ((active0 & 0x40000L) != 0L)
            return 292;
         if ((active0 & 0x400000000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return 115;
         }
         if ((active0 & 0x3000006fd1bf5c0L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return 365;
         }
         if ((active0 & 0x100000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return 199;
         }
         if ((active0 & 0xc00200L) != 0L)
            return 365;
         if ((active0 & 0x2000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return 42;
         }
         if ((active0 & 0x2000000000000L) != 0L)
         {
            if (jjmatchedPos != 1)
            {
               jjmatchedKind = 65;
               jjmatchedPos = 1;
            }
            return 101;
         }
         return -1;
      case 2:
         if ((active0 & 0x10000L) != 0L)
            return 365;
         if ((active0 & 0x7020007ff1af7c0L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 2;
            return 365;
         }
         return -1;
      case 3:
         if ((active0 & 0x60618a040L) != 0L)
            return 365;
         if ((active0 & 0x7020001f9025780L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 3;
            return 365;
         }
         return -1;
      case 4:
         if ((active0 & 0x5020001d9004580L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 4;
            return 365;
         }
         if ((active0 & 0x200000020021200L) != 0L)
            return 365;
         return -1;
      case 5:
         if ((active0 & 0x5020000d0000180L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 5;
            return 365;
         }
         if ((active0 & 0x109004400L) != 0L)
            return 365;
         return -1;
      case 6:
         if ((active0 & 0x20000c0000100L) != 0L)
            return 365;
         if ((active0 & 0x500000010000080L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 6;
            return 365;
         }
         return -1;
      case 7:
         if ((active0 & 0x500000010000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 7;
            return 365;
         }
         if ((active0 & 0x80L) != 0L)
            return 365;
         return -1;
      case 8:
         if ((active0 & 0x400000010000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 8;
            return 365;
         }
         if ((active0 & 0x100000000000000L) != 0L)
            return 365;
         return -1;
      case 9:
         if ((active0 & 0x400000010000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 9;
            return 365;
         }
         return -1;
      case 10:
         if ((active0 & 0x400000010000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 10;
            return 365;
         }
         return -1;
      case 11:
         if ((active0 & 0x400000000000000L) != 0L)
            return 365;
         if ((active0 & 0x10000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 11;
            return 365;
         }
         return -1;
      case 12:
         if ((active0 & 0x10000000L) != 0L)
         {
            jjmatchedKind = 65;
            jjmatchedPos = 12;
            return 365;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_0(int pos, long active0, long active1){
   return jjMoveNfa_0(jjStopStringLiteralDfa_0(pos, active0, active1), pos + 1);
}
private int jjStopAtPos(int pos, int kind)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   return pos + 1;
}
private int jjMoveStringLiteralDfa0_0(){
   switch(curChar)
   {
      case 33:
         return jjStopAtPos(0, 38);
      case 35:
         return jjStopAtPos(0, 3);
      case 38:
         return jjMoveStringLiteralDfa1_0(0x1000000000L);
      case 40:
         return jjStopAtPos(0, 39);
      case 41:
         return jjStopAtPos(0, 40);
      case 42:
         return jjStopAtPos(0, 74);
      case 43:
         return jjStopAtPos(0, 43);
      case 44:
         return jjStopAtPos(0, 46);
      case 45:
         return jjStopAtPos(0, 44);
      case 58:
         return jjStopAtPos(0, 41);
      case 59:
         return jjStopAtPos(0, 45);
      case 60:
         return jjStopAtPos(0, 67);
      case 61:
         return jjStopAtPos(0, 42);
      case 62:
         return jjStopAtPos(0, 68);
      case 63:
         return jjStopAtPos(0, 48);
      case 65:
         return jjMoveStringLiteralDfa1_0(0x1000L);
      case 68:
         return jjMoveStringLiteralDfa1_0(0x100000000000000L);
      case 77:
         return jjMoveStringLiteralDfa1_0(0x10000L);
      case 78:
         return jjMoveStringLiteralDfa1_0(0x2000L);
      case 79:
         return jjMoveStringLiteralDfa1_0(0x4000L);
      case 80:
         return jjMoveStringLiteralDfa1_0(0x8000L);
      case 91:
         return jjStopAtPos(0, 71);
      case 93:
         return jjStopAtPos(0, 72);
      case 97:
         return jjMoveStringLiteralDfa1_0(0x60000L);
      case 99:
         return jjMoveStringLiteralDfa1_0(0x2000000080000L);
      case 101:
         return jjMoveStringLiteralDfa1_0(0x100000L);
      case 104:
         return jjMoveStringLiteralDfa1_0(0x200000000000000L);
      case 105:
         return jjMoveStringLiteralDfa1_0(0x1c00200L);
      case 108:
         return jjMoveStringLiteralDfa1_0(0x2000000L);
      case 109:
         return jjMoveStringLiteralDfa1_0(0x4000000L);
      case 110:
         return jjMoveStringLiteralDfa1_0(0x400000000L);
      case 111:
         return jjMoveStringLiteralDfa1_0(0x8000400L);
      case 112:
         return jjMoveStringLiteralDfa1_0(0x10000000L);
      case 114:
         return jjMoveStringLiteralDfa1_0(0x400000060000000L);
      case 115:
         return jjMoveStringLiteralDfa1_0(0x180000000L);
      case 116:
         return jjMoveStringLiteralDfa1_0(0x200000040L);
      case 118:
         return jjMoveStringLiteralDfa1_0(0x100L);
      case 119:
         return jjMoveStringLiteralDfa1_0(0x80L);
      case 123:
         return jjStopAtPos(0, 69);
      case 124:
         return jjMoveStringLiteralDfa1_0(0x2000000000L);
      case 125:
         return jjStopAtPos(0, 70);
      default :
         return jjMoveNfa_0(0, 0);
   }
}
private int jjMoveStringLiteralDfa1_0(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(0, active0, 0L);
      return 1;
   }
   switch(curChar)
   {
      case 38:
         if ((active0 & 0x1000000000L) != 0L)
            return jjStopAtPos(1, 36);
         break;
      case 97:
         return jjMoveStringLiteralDfa2_0(active0, 0x10098040L);
      case 98:
         return jjMoveStringLiteralDfa2_0(active0, 0x8004000L);
      case 99:
         return jjMoveStringLiteralDfa2_0(active0, 0x80000000L);
      case 101:
         return jjMoveStringLiteralDfa2_0(active0, 0x400000006000100L);
      case 102:
         if ((active0 & 0x400000L) != 0L)
            return jjStartNfaWithStates_0(1, 22, 365);
         break;
      case 104:
         return jjMoveStringLiteralDfa2_0(active0, 0x200000000L);
      case 105:
         return jjMoveStringLiteralDfa2_0(active0, 0x300000020000000L);
      case 108:
         return jjMoveStringLiteralDfa2_0(active0, 0x120000L);
      case 109:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000000L);
      case 110:
         if ((active0 & 0x800000L) != 0L)
         {
            jjmatchedKind = 23;
            jjmatchedPos = 1;
         }
         return jjMoveStringLiteralDfa2_0(active0, 0x200L);
      case 111:
         return jjMoveStringLiteralDfa2_0(active0, 0x2000000002080L);
      case 114:
         return jjMoveStringLiteralDfa2_0(active0, 0x1000L);
      case 115:
         if ((active0 & 0x40000L) != 0L)
            return jjStartNfaWithStates_0(1, 18, 292);
         break;
      case 116:
         return jjMoveStringLiteralDfa2_0(active0, 0x100000000L);
      case 117:
         return jjMoveStringLiteralDfa2_0(active0, 0x440000400L);
      case 124:
         if ((active0 & 0x2000000000L) != 0L)
            return jjStopAtPos(1, 37);
         break;
      default :
         break;
   }
   return jjStartNfa_0(0, active0, 0L);
}
private int jjMoveStringLiteralDfa2_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(0, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(1, active0, 0L);
      return 2;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa3_0(active0, 0x80000000L);
      case 101:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000000L);
      case 102:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000L);
      case 103:
         return jjMoveStringLiteralDfa3_0(active0, 0x20000000L);
      case 105:
         return jjMoveStringLiteralDfa3_0(active0, 0x28000L);
      case 106:
         return jjMoveStringLiteralDfa3_0(active0, 0x8004000L);
      case 108:
         return jjMoveStringLiteralDfa3_0(active0, 0x400080000L);
      case 109:
         return jjMoveStringLiteralDfa3_0(active0, 0x2000000000000L);
      case 110:
         return jjMoveStringLiteralDfa3_0(active0, 0x200000040002000L);
      case 112:
         if ((active0 & 0x10000L) != 0L)
            return jjStartNfaWithStates_0(2, 16, 365);
         return jjMoveStringLiteralDfa3_0(active0, 0x1000200L);
      case 113:
         return jjMoveStringLiteralDfa3_0(active0, 0x400000000000000L);
      case 114:
         return jjMoveStringLiteralDfa3_0(active0, 0x100000110001180L);
      case 115:
         return jjMoveStringLiteralDfa3_0(active0, 0x100040L);
      case 116:
         return jjMoveStringLiteralDfa3_0(active0, 0x4000400L);
      default :
         break;
   }
   return jjStartNfa_0(1, active0, 0L);
}
private int jjMoveStringLiteralDfa3_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(1, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(2, active0, 0L);
      return 3;
   }
   switch(curChar)
   {
      case 97:
         if ((active0 & 0x4000000L) != 0L)
            return jjStartNfaWithStates_0(3, 26, 365);
         return jjMoveStringLiteralDfa4_0(active0, 0x10021000L);
      case 101:
         if ((active0 & 0x2000L) != 0L)
            return jjStartNfaWithStates_0(3, 13, 365);
         else if ((active0 & 0x100000L) != 0L)
            return jjStartNfaWithStates_0(3, 20, 365);
         return jjMoveStringLiteralDfa4_0(active0, 0x100000008004000L);
      case 104:
         return jjMoveStringLiteralDfa4_0(active0, 0x20000000L);
      case 107:
         if ((active0 & 0x40L) != 0L)
            return jjStartNfaWithStates_0(3, 6, 365);
         return jjMoveStringLiteralDfa4_0(active0, 0x80L);
      case 108:
         if ((active0 & 0x80000L) != 0L)
            return jjStartNfaWithStates_0(3, 19, 365);
         else if ((active0 & 0x400000000L) != 0L)
            return jjStartNfaWithStates_0(3, 34, 365);
         break;
      case 109:
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000000000L);
      case 110:
         if ((active0 & 0x200000000L) != 0L)
            return jjStartNfaWithStates_0(3, 33, 365);
         break;
      case 111:
         return jjMoveStringLiteralDfa4_0(active0, 0x1000000L);
      case 112:
         return jjMoveStringLiteralDfa4_0(active0, 0x400L);
      case 114:
         if ((active0 & 0x8000L) != 0L)
            return jjStartNfaWithStates_0(3, 15, 365);
         break;
      case 115:
         return jjMoveStringLiteralDfa4_0(active0, 0x100L);
      case 116:
         if ((active0 & 0x2000000L) != 0L)
            return jjStartNfaWithStates_0(3, 25, 365);
         return jjMoveStringLiteralDfa4_0(active0, 0x2000000c0000000L);
      case 117:
         return jjMoveStringLiteralDfa4_0(active0, 0x400000100000200L);
      default :
         break;
   }
   return jjStartNfa_0(2, active0, 0L);
}
private int jjMoveStringLiteralDfa4_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(2, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(3, active0, 0L);
      return 4;
   }
   switch(curChar)
   {
      case 97:
         return jjMoveStringLiteralDfa5_0(active0, 0x2000000000000L);
      case 99:
         return jjMoveStringLiteralDfa5_0(active0, 0x100000108004000L);
      case 102:
         return jjMoveStringLiteralDfa5_0(active0, 0x80L);
      case 105:
         return jjMoveStringLiteralDfa5_0(active0, 0x400000040000100L);
      case 109:
         return jjMoveStringLiteralDfa5_0(active0, 0x10000000L);
      case 114:
         return jjMoveStringLiteralDfa5_0(active0, 0x1000000L);
      case 115:
         if ((active0 & 0x20000L) != 0L)
            return jjStartNfaWithStates_0(4, 17, 365);
         else if ((active0 & 0x200000000000000L) != 0L)
            return jjStartNfaWithStates_0(4, 57, 365);
         break;
      case 116:
         if ((active0 & 0x200L) != 0L)
            return jjStartNfaWithStates_0(4, 9, 365);
         else if ((active0 & 0x20000000L) != 0L)
            return jjStartNfaWithStates_0(4, 29, 365);
         return jjMoveStringLiteralDfa5_0(active0, 0x80000000L);
      case 117:
         return jjMoveStringLiteralDfa5_0(active0, 0x400L);
      case 121:
         if ((active0 & 0x1000L) != 0L)
            return jjStartNfaWithStates_0(4, 12, 365);
         break;
      default :
         break;
   }
   return jjStartNfa_0(3, active0, 0L);
}
private int jjMoveStringLiteralDfa5_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(3, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(4, active0, 0L);
      return 5;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa6_0(active0, 0x90000000L);
      case 108:
         return jjMoveStringLiteralDfa6_0(active0, 0x80L);
      case 109:
         return jjMoveStringLiteralDfa6_0(active0, 0x40000000L);
      case 110:
         return jjMoveStringLiteralDfa6_0(active0, 0x2000000000000L);
      case 111:
         return jjMoveStringLiteralDfa6_0(active0, 0x100L);
      case 114:
         return jjMoveStringLiteralDfa6_0(active0, 0x400000000000000L);
      case 116:
         if ((active0 & 0x400L) != 0L)
            return jjStartNfaWithStates_0(5, 10, 365);
         else if ((active0 & 0x4000L) != 0L)
            return jjStartNfaWithStates_0(5, 14, 365);
         else if ((active0 & 0x1000000L) != 0L)
            return jjStartNfaWithStates_0(5, 24, 365);
         else if ((active0 & 0x8000000L) != 0L)
            return jjStartNfaWithStates_0(5, 27, 365);
         else if ((active0 & 0x100000000L) != 0L)
            return jjStartNfaWithStates_0(5, 32, 365);
         return jjMoveStringLiteralDfa6_0(active0, 0x100000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(4, active0, 0L);
}
private int jjMoveStringLiteralDfa6_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(4, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(5, active0, 0L);
      return 6;
   }
   switch(curChar)
   {
      case 100:
         if ((active0 & 0x2000000000000L) != 0L)
            return jjStartNfaWithStates_0(6, 49, 365);
         break;
      case 101:
         if ((active0 & 0x40000000L) != 0L)
            return jjStartNfaWithStates_0(6, 30, 365);
         return jjMoveStringLiteralDfa7_0(active0, 0x400000000000000L);
      case 110:
         if ((active0 & 0x100L) != 0L)
            return jjStartNfaWithStates_0(6, 8, 365);
         break;
      case 111:
         return jjMoveStringLiteralDfa7_0(active0, 0x100000000000080L);
      case 114:
         if ((active0 & 0x80000000L) != 0L)
            return jjStartNfaWithStates_0(6, 31, 365);
         break;
      case 116:
         return jjMoveStringLiteralDfa7_0(active0, 0x10000000L);
      default :
         break;
   }
   return jjStartNfa_0(5, active0, 0L);
}
private int jjMoveStringLiteralDfa7_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(5, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(6, active0, 0L);
      return 7;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa8_0(active0, 0x10000000L);
      case 109:
         return jjMoveStringLiteralDfa8_0(active0, 0x400000000000000L);
      case 114:
         return jjMoveStringLiteralDfa8_0(active0, 0x100000000000000L);
      case 119:
         if ((active0 & 0x80L) != 0L)
            return jjStartNfaWithStates_0(7, 7, 365);
         break;
      default :
         break;
   }
   return jjStartNfa_0(6, active0, 0L);
}
private int jjMoveStringLiteralDfa8_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(6, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(7, active0, 0L);
      return 8;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa9_0(active0, 0x400000000000000L);
      case 114:
         return jjMoveStringLiteralDfa9_0(active0, 0x10000000L);
      case 121:
         if ((active0 & 0x100000000000000L) != 0L)
            return jjStartNfaWithStates_0(8, 56, 365);
         break;
      default :
         break;
   }
   return jjStartNfa_0(7, active0, 0L);
}
private int jjMoveStringLiteralDfa9_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(7, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(8, active0, 0L);
      return 9;
   }
   switch(curChar)
   {
      case 95:
         return jjMoveStringLiteralDfa10_0(active0, 0x10000000L);
      case 110:
         return jjMoveStringLiteralDfa10_0(active0, 0x400000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(8, active0, 0L);
}
private int jjMoveStringLiteralDfa10_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(8, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(9, active0, 0L);
      return 10;
   }
   switch(curChar)
   {
      case 109:
         return jjMoveStringLiteralDfa11_0(active0, 0x10000000L);
      case 116:
         return jjMoveStringLiteralDfa11_0(active0, 0x400000000000000L);
      default :
         break;
   }
   return jjStartNfa_0(9, active0, 0L);
}
private int jjMoveStringLiteralDfa11_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(9, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(10, active0, 0L);
      return 11;
   }
   switch(curChar)
   {
      case 101:
         return jjMoveStringLiteralDfa12_0(active0, 0x10000000L);
      case 115:
         if ((active0 & 0x400000000000000L) != 0L)
            return jjStartNfaWithStates_0(11, 58, 365);
         break;
      default :
         break;
   }
   return jjStartNfa_0(10, active0, 0L);
}
private int jjMoveStringLiteralDfa12_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(10, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(11, active0, 0L);
      return 12;
   }
   switch(curChar)
   {
      case 116:
         return jjMoveStringLiteralDfa13_0(active0, 0x10000000L);
      default :
         break;
   }
   return jjStartNfa_0(11, active0, 0L);
}
private int jjMoveStringLiteralDfa13_0(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_0(11, old0, 0L);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_0(12, active0, 0L);
      return 13;
   }
   switch(curChar)
   {
      case 97:
         if ((active0 & 0x10000000L) != 0L)
            return jjStartNfaWithStates_0(13, 28, 365);
         break;
      default :
         break;
   }
   return jjStartNfa_0(12, active0, 0L);
}
private int jjStartNfaWithStates_0(int pos, int kind, int state)
{
   jjmatchedKind = kind;
   jjmatchedPos = pos;
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) { return pos + 1; }
   return jjMoveNfa_0(state, pos + 1);
}
static final long[] jjbitVec0 = {
   0x0L, 0x0L, 0xffffffffffffffffL, 0xffffffffffffffffL
};
private int jjMoveNfa_0(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 365;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 292:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 43:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 242:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 194:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 199:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 37:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 365:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 106:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 115:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 287:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 310:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 0:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 66)
                        kind = 66;
                     { jjCheckNAddStates(0, 4); }
                  }
                  else if ((0x802000000000L & l) != 0L)
                  {
                     if (kind > 73)
                        kind = 73;
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                     { jjCheckNAdd(3); }
                  }
                  else if ((0x2400L & l) != 0L)
                  {
                     if (kind > 1)
                        kind = 1;
                  }
                  else if (curChar == 46)
                     { jjCheckNAdd(79); }
                  else if (curChar == 39)
                     { jjCheckNAddTwoStates(71, 72); }
                  else if (curChar == 34)
                     { jjCheckNAddTwoStates(68, 69); }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 42:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 101:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 293:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 86:
                  if ((0x3ff000000000000L & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  else if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 1:
                  if (curChar == 10 && kind > 1)
                     kind = 1;
                  break;
               case 2:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 1;
                  break;
               case 3:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  { jjCheckNAdd(3); }
                  break;
               case 67:
                  if (curChar == 34)
                     { jjCheckNAddTwoStates(68, 69); }
                  break;
               case 68:
                  if ((0xfffffffbfffff9ffL & l) != 0L)
                     { jjCheckNAddTwoStates(68, 69); }
                  break;
               case 69:
                  if (curChar == 34 && kind > 59)
                     kind = 59;
                  break;
               case 70:
                  if (curChar == 39)
                     { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 71:
                  if ((0xffffff7ffffff9ffL & l) != 0L)
                     { jjCheckNAddTwoStates(71, 72); }
                  break;
               case 72:
                  if (curChar == 39 && kind > 59)
                     kind = 59;
                  break;
               case 74:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjstateSet[jjnewStateCnt++] = 75;
                  break;
               case 75:
                  if ((0xff000000000000L & l) == 0L)
                     break;
                  if (kind > 60)
                     kind = 60;
                  jjstateSet[jjnewStateCnt++] = 76;
                  break;
               case 76:
                  if ((0xff000000000000L & l) != 0L && kind > 60)
                     kind = 60;
                  break;
               case 77:
                  if ((0x802000000000L & l) != 0L && kind > 73)
                     kind = 73;
                  break;
               case 78:
                  if (curChar == 46)
                     { jjCheckNAdd(79); }
                  break;
               case 79:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  { jjCheckNAddTwoStates(79, 80); }
                  break;
               case 81:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(82); }
                  break;
               case 82:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  { jjCheckNAdd(82); }
                  break;
               case 331:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 332:
                  if (curChar == 46)
                     jjstateSet[jjnewStateCnt++] = 333;
                  break;
               case 334:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(332, 334); }
                  break;
               case 335:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAdd(335); }
                  break;
               case 338:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 339:
                  if ((0x3ff000000000000L & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 341:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 342:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 343:
               case 352:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAdd(344); }
                  break;
               case 344:
                  if ((0x3ff000000000000L & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 346:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 347:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 348:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 349:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 350:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 351:
                  if ((0x3ff000000000000L & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 353:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAddStates(0, 4); }
                  break;
               case 354:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 66)
                     kind = 66;
                  { jjCheckNAdd(354); }
                  break;
               case 355:
                  if ((0x3ff000000000000L & l) != 0L)
                     { jjCheckNAddTwoStates(355, 356); }
                  break;
               case 356:
                  if (curChar != 46)
                     break;
                  if (kind > 76)
                     kind = 76;
                  { jjCheckNAddTwoStates(357, 358); }
                  break;
               case 357:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  { jjCheckNAddTwoStates(357, 358); }
                  break;
               case 359:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(360); }
                  break;
               case 360:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  { jjCheckNAdd(360); }
                  break;
               case 361:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  { jjCheckNAddTwoStates(361, 362); }
                  break;
               case 363:
                  if ((0x280000000000L & l) != 0L)
                     { jjCheckNAdd(364); }
                  break;
               case 364:
                  if ((0x3ff000000000000L & l) == 0L)
                     break;
                  if (kind > 76)
                     kind = 76;
                  { jjCheckNAdd(364); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 292:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 297;
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 291;
                  break;
               case 43:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 42;
                  break;
               case 242:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 284;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 273;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 263;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 255;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 248;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 241;
                  break;
               case 194:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 101)
                     { jjCheckNAdd(45); }
                  else if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 230;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 226;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 204;
                  else if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 195;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 222;
                  else if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 199;
                  else if (curChar == 117)
                     { jjCheckNAdd(29); }
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 199:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 203;
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 198;
                  break;
               case 37:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 36;
                  break;
               case 365:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 106:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 191;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 188;
                  else if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 105;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 178;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 169;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 162;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 156;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 149;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 141;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 130;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 122;
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 115:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 187;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 177;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 168;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 161;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 155;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 148;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 140;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 129;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 121;
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 114;
                  break;
               case 287:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 97)
                     { jjCheckNAdd(33); }
                  else if (curChar == 105)
                     { jjCheckNAdd(132); }
                  break;
               case 310:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 316;
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 309;
                  break;
               case 0:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAddStates(5, 7); }
                  }
                  else if (curChar == 92)
                     { jjAddStates(8, 10); }
                  if (curChar == 102)
                     { jjAddStates(11, 13); }
                  else if (curChar == 116)
                     { jjAddStates(14, 15); }
                  else if (curChar == 70)
                     { jjAddStates(16, 17); }
                  else if (curChar == 97)
                     { jjAddStates(18, 19); }
                  else if (curChar == 109)
                     { jjAddStates(20, 21); }
                  else if (curChar == 119)
                     { jjAddStates(22, 27); }
                  else if (curChar == 115)
                     { jjAddStates(28, 36); }
                  else if (curChar == 114)
                     { jjAddStates(37, 48); }
                  else if (curChar == 99)
                     { jjAddStates(49, 51); }
                  else if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 74;
                  else if (curChar == 107)
                     jjstateSet[jjnewStateCnt++] = 65;
                  else if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 61;
                  else if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 57;
                  else if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 53;
                  else if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 46;
                  else if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 43;
                  else if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 37;
                  else if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 31;
                  else if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 27;
                  else if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 18;
                  else if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 12;
                  else if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 42:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 41;
                  break;
               case 101:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 100;
                  break;
               case 293:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 298;
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 292;
                  break;
               case 86:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                  {
                     if (kind > 65)
                        kind = 65;
                     { jjCheckNAdd(335); }
                  }
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 101;
                  else if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 88;
                  else if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 85;
                  break;
               case 4:
                  if (curChar == 110 && kind > 11)
                     kind = 11;
                  break;
               case 5:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 4;
                  break;
               case 6:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 5;
                  break;
               case 7:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 6;
                  break;
               case 8:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 7;
                  break;
               case 9:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 8;
                  break;
               case 10:
                  if (curChar == 66)
                     jjstateSet[jjnewStateCnt++] = 9;
                  break;
               case 11:
                  if (curChar == 116 && kind > 11)
                     kind = 11;
                  break;
               case 12:
                  if (curChar == 110)
                     { jjCheckNAdd(11); }
                  break;
               case 13:
                  if (curChar == 73)
                     jjstateSet[jjnewStateCnt++] = 12;
                  break;
               case 14:
                  if (curChar == 103 && kind > 11)
                     kind = 11;
                  break;
               case 15:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 14;
                  break;
               case 16:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 15;
                  break;
               case 17:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 16;
                  break;
               case 18:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 17;
                  break;
               case 19:
                  if (curChar == 83)
                     jjstateSet[jjnewStateCnt++] = 18;
                  break;
               case 20:
                  if (curChar == 101 && kind > 35)
                     kind = 35;
                  break;
               case 21:
                  if (curChar == 109)
                     { jjCheckNAdd(20); }
                  break;
               case 22:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 21;
                  break;
               case 23:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 22;
                  break;
               case 24:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 23;
                  break;
               case 25:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 24;
                  break;
               case 26:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 25;
                  break;
               case 27:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 26;
                  break;
               case 28:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 27;
                  break;
               case 29:
                  if (curChar == 98 && kind > 35)
                     kind = 35;
                  break;
               case 30:
                  if (curChar == 111)
                     { jjCheckNAdd(29); }
                  break;
               case 31:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 30;
                  break;
               case 32:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 31;
                  break;
               case 33:
                  if (curChar == 120 && kind > 35)
                     kind = 35;
                  break;
               case 34:
               case 224:
                  if (curChar == 105)
                     { jjCheckNAdd(33); }
                  break;
               case 35:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 34;
                  break;
               case 36:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 35;
                  break;
               case 38:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 37;
                  break;
               case 39:
                  if (curChar == 104 && kind > 35)
                     kind = 35;
                  break;
               case 40:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 39;
                  break;
               case 41:
                  if (curChar == 103)
                     jjstateSet[jjnewStateCnt++] = 40;
                  break;
               case 44:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 43;
                  break;
               case 45:
                  if (curChar == 112 && kind > 35)
                     kind = 35;
                  break;
               case 46:
               case 59:
                  if (curChar == 105)
                     { jjCheckNAdd(45); }
                  break;
               case 47:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 46;
                  break;
               case 48:
                  if (curChar == 100 && kind > 35)
                     kind = 35;
                  break;
               case 49:
                  if (curChar == 101)
                     { jjCheckNAdd(48); }
                  break;
               case 50:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 49;
                  break;
               case 51:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 50;
                  break;
               case 52:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 51;
                  break;
               case 53:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 52;
                  break;
               case 54:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 53;
                  break;
               case 55:
               case 228:
                  if (curChar == 116)
                     { jjCheckNAdd(20); }
                  break;
               case 56:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 55;
                  break;
               case 57:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 56;
                  break;
               case 58:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 57;
                  break;
               case 60:
                  if (curChar == 122)
                     jjstateSet[jjnewStateCnt++] = 59;
                  break;
               case 61:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 60;
                  break;
               case 62:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 61;
                  break;
               case 63:
                  if (curChar == 115 && kind > 35)
                     kind = 35;
                  break;
               case 64:
                  if (curChar == 121)
                     { jjCheckNAdd(63); }
                  break;
               case 65:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 64;
                  break;
               case 66:
                  if (curChar == 107)
                     jjstateSet[jjnewStateCnt++] = 65;
                  break;
               case 68:
                  { jjAddStates(52, 53); }
                  break;
               case 71:
                  { jjAddStates(54, 55); }
                  break;
               case 73:
                  if (curChar == 92)
                     jjstateSet[jjnewStateCnt++] = 74;
                  break;
               case 80:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(56, 57); }
                  break;
               case 83:
                  if (curChar == 99)
                     { jjAddStates(49, 51); }
                  break;
               case 84:
                  if (curChar == 108 && kind > 35)
                     kind = 35;
                  break;
               case 85:
                  if (curChar == 105)
                     { jjCheckNAdd(84); }
                  break;
               case 87:
                  if (curChar == 115)
                     { jjCheckNAdd(63); }
                  break;
               case 88:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 87;
                  break;
               case 89:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 88;
                  break;
               case 90:
                  if (curChar == 121 && kind > 35)
                     kind = 35;
                  break;
               case 91:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 90;
                  break;
               case 92:
                  if (curChar == 107)
                     jjstateSet[jjnewStateCnt++] = 91;
                  break;
               case 93:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 92;
                  break;
               case 94:
                  if (curChar == 121)
                     jjstateSet[jjnewStateCnt++] = 93;
                  break;
               case 95:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 94;
                  break;
               case 96:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 95;
                  break;
               case 97:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 96;
                  break;
               case 98:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 97;
                  break;
               case 99:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 98;
                  break;
               case 100:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 99;
                  break;
               case 102:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 101;
                  break;
               case 103:
                  if (curChar == 114)
                     { jjAddStates(37, 48); }
                  break;
               case 104:
                  if (curChar == 110)
                     { jjCheckNAdd(48); }
                  break;
               case 105:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 104;
                  break;
               case 107:
                  if (curChar == 103 && kind > 35)
                     kind = 35;
                  break;
               case 108:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 107;
                  break;
               case 109:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 108;
                  break;
               case 110:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 109;
                  break;
               case 111:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 110;
                  break;
               case 112:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 111;
                  break;
               case 113:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 112;
                  break;
               case 114:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 113;
                  break;
               case 116:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 115;
                  break;
               case 117:
                  if (curChar == 116 && kind > 35)
                     kind = 35;
                  break;
               case 118:
                  if (curChar == 110)
                     { jjCheckNAdd(117); }
                  break;
               case 119:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 118;
                  break;
               case 120:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 119;
                  break;
               case 121:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 120;
                  break;
               case 122:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 121;
                  break;
               case 123:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 122;
                  break;
               case 124:
                  if (curChar == 97)
                     { jjCheckNAdd(117); }
                  break;
               case 125:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 124;
                  break;
               case 126:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 125;
                  break;
               case 127:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 126;
                  break;
               case 128:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 127;
                  break;
               case 129:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 128;
                  break;
               case 130:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 129;
                  break;
               case 131:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 130;
                  break;
               case 132:
                  if (curChar == 110 && kind > 35)
                     kind = 35;
                  break;
               case 133:
                  if (curChar == 97)
                     { jjCheckNAdd(132); }
                  break;
               case 134:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 133;
                  break;
               case 135:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 134;
                  break;
               case 136:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 135;
                  break;
               case 137:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 136;
                  break;
               case 138:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 137;
                  break;
               case 139:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 138;
                  break;
               case 140:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 139;
                  break;
               case 141:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 140;
                  break;
               case 142:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 141;
                  break;
               case 143:
               case 234:
                  if (curChar == 101)
                     { jjCheckNAdd(63); }
                  break;
               case 144:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 143;
                  break;
               case 145:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 144;
                  break;
               case 146:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 145;
                  break;
               case 147:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 146;
                  break;
               case 148:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 147;
                  break;
               case 149:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 148;
                  break;
               case 150:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 149;
                  break;
               case 151:
                  if (curChar == 118 && kind > 35)
                     kind = 35;
                  break;
               case 152:
               case 243:
                  if (curChar == 115)
                     { jjCheckNAdd(151); }
                  break;
               case 153:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 152;
                  break;
               case 154:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 153;
                  break;
               case 155:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 154;
                  break;
               case 156:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 155;
                  break;
               case 157:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 156;
                  break;
               case 158:
               case 250:
               case 290:
                  if (curChar == 97)
                     { jjCheckNAdd(45); }
                  break;
               case 159:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 158;
                  break;
               case 160:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 159;
                  break;
               case 161:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 160;
                  break;
               case 162:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 161;
                  break;
               case 163:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 162;
                  break;
               case 164:
               case 257:
                  if (curChar == 111)
                     { jjCheckNAdd(132); }
                  break;
               case 165:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 164;
                  break;
               case 166:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 165;
                  break;
               case 167:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 166;
                  break;
               case 168:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 167;
                  break;
               case 169:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 168;
                  break;
               case 170:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 169;
                  break;
               case 171:
               case 265:
                  if (curChar == 99)
                     { jjCheckNAdd(117); }
                  break;
               case 172:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 171;
                  break;
               case 173:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 172;
                  break;
               case 174:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 173;
                  break;
               case 175:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 174;
                  break;
               case 176:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 175;
                  break;
               case 177:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 176;
                  break;
               case 178:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 177;
                  break;
               case 179:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 178;
                  break;
               case 180:
               case 275:
                  if (curChar == 116)
                     { jjCheckNAdd(63); }
                  break;
               case 181:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 180;
                  break;
               case 182:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 181;
                  break;
               case 183:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 182;
                  break;
               case 184:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 183;
                  break;
               case 185:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 184;
                  break;
               case 186:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 185;
                  break;
               case 187:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 186;
                  break;
               case 188:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 187;
                  break;
               case 189:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 188;
                  break;
               case 190:
                  if (curChar == 103)
                     { jjCheckNAdd(20); }
                  break;
               case 191:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 190;
                  break;
               case 192:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 191;
                  break;
               case 193:
                  if (curChar == 115)
                     { jjAddStates(28, 36); }
                  break;
               case 195:
                  if (curChar == 122)
                     { jjCheckNAdd(20); }
                  break;
               case 196:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 195;
                  break;
               case 197:
                  if (curChar == 117)
                     { jjCheckNAdd(117); }
                  break;
               case 198:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 197;
                  break;
               case 200:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 199;
                  break;
               case 201:
                  if (curChar == 114 && kind > 35)
                     kind = 35;
                  break;
               case 202:
                  if (curChar == 114)
                     { jjCheckNAdd(201); }
                  break;
               case 203:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 202;
                  break;
               case 204:
                  if (curChar == 100)
                     jjstateSet[jjnewStateCnt++] = 203;
                  break;
               case 205:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 204;
                  break;
               case 206:
                  if (curChar == 115)
                     { jjCheckNAdd(117); }
                  break;
               case 207:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 206;
                  break;
               case 208:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 207;
                  break;
               case 209:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 208;
                  break;
               case 210:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 209;
                  break;
               case 211:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 210;
                  break;
               case 212:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 211;
                  break;
               case 213:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 212;
                  break;
               case 214:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 213;
                  break;
               case 215:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 214;
                  break;
               case 216:
                  if (curChar == 108)
                     { jjCheckNAdd(84); }
                  break;
               case 217:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 216;
                  break;
               case 218:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 217;
                  break;
               case 219:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 218;
                  break;
               case 220:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 219;
                  break;
               case 221:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 220;
                  break;
               case 222:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 221;
                  break;
               case 223:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 222;
                  break;
               case 225:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 224;
                  break;
               case 226:
                  if (curChar == 102)
                     jjstateSet[jjnewStateCnt++] = 225;
                  break;
               case 227:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 226;
                  break;
               case 229:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 228;
                  break;
               case 230:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 229;
                  break;
               case 231:
                  if (curChar == 113)
                     jjstateSet[jjnewStateCnt++] = 230;
                  break;
               case 232:
                  if (curChar == 101)
                     { jjCheckNAdd(45); }
                  break;
               case 233:
                  if (curChar == 119)
                     { jjAddStates(22, 27); }
                  break;
               case 235:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 234;
                  break;
               case 236:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 235;
                  break;
               case 237:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 236;
                  break;
               case 238:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 237;
                  break;
               case 239:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 238;
                  break;
               case 240:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 239;
                  break;
               case 241:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 240;
                  break;
               case 244:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 243;
                  break;
               case 245:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 244;
                  break;
               case 246:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 245;
                  break;
               case 247:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 246;
                  break;
               case 248:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 247;
                  break;
               case 249:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 248;
                  break;
               case 251:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 250;
                  break;
               case 252:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 251;
                  break;
               case 253:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 252;
                  break;
               case 254:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 253;
                  break;
               case 255:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 254;
                  break;
               case 256:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 255;
                  break;
               case 258:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 257;
                  break;
               case 259:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 258;
                  break;
               case 260:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 259;
                  break;
               case 261:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 260;
                  break;
               case 262:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 261;
                  break;
               case 263:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 262;
                  break;
               case 264:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 263;
                  break;
               case 266:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 265;
                  break;
               case 267:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 266;
                  break;
               case 268:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 267;
                  break;
               case 269:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 268;
                  break;
               case 270:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 269;
                  break;
               case 271:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 270;
                  break;
               case 272:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 271;
                  break;
               case 273:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 272;
                  break;
               case 274:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 273;
                  break;
               case 276:
                  if (curChar == 99)
                     jjstateSet[jjnewStateCnt++] = 275;
                  break;
               case 277:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 276;
                  break;
               case 278:
                  if (curChar == 106)
                     jjstateSet[jjnewStateCnt++] = 277;
                  break;
               case 279:
                  if (curChar == 98)
                     jjstateSet[jjnewStateCnt++] = 278;
                  break;
               case 280:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 279;
                  break;
               case 281:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 280;
                  break;
               case 282:
                  if (curChar == 101)
                     jjstateSet[jjnewStateCnt++] = 281;
                  break;
               case 283:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 282;
                  break;
               case 284:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 283;
                  break;
               case 285:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 284;
                  break;
               case 286:
                  if (curChar == 109)
                     { jjAddStates(20, 21); }
                  break;
               case 288:
                  if (curChar == 97)
                     { jjCheckNAdd(33); }
                  break;
               case 289:
                  if (curChar == 97)
                     { jjAddStates(18, 19); }
                  break;
               case 291:
                  if (curChar == 109)
                     jjstateSet[jjnewStateCnt++] = 290;
                  break;
               case 294:
                  if (curChar == 114)
                     { jjCheckNAdd(63); }
                  break;
               case 295:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 294;
                  break;
               case 296:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 295;
                  break;
               case 297:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 296;
                  break;
               case 298:
                  if (curChar == 95)
                     jjstateSet[jjnewStateCnt++] = 297;
                  break;
               case 299:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 298;
                  break;
               case 300:
                  if (curChar == 70)
                     { jjAddStates(16, 17); }
                  break;
               case 301:
                  if (curChar == 101 && kind > 11)
                     kind = 11;
                  break;
               case 302:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 301;
                  break;
               case 303:
                  if (curChar == 105)
                     jjstateSet[jjnewStateCnt++] = 302;
                  break;
               case 304:
                  if (curChar == 97)
                     { jjCheckNAdd(11); }
                  break;
               case 305:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 304;
                  break;
               case 306:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 305;
                  break;
               case 307:
                  if (curChar == 116)
                     { jjAddStates(14, 15); }
                  break;
               case 308:
                  if (curChar == 101 && kind > 21)
                     kind = 21;
                  break;
               case 309:
                  if (curChar == 117)
                     { jjCheckNAdd(308); }
                  break;
               case 311:
                  if (curChar == 115)
                     { jjCheckNAdd(20); }
                  break;
               case 312:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 311;
                  break;
               case 313:
                  if (curChar == 112)
                     jjstateSet[jjnewStateCnt++] = 312;
                  break;
               case 314:
                  if (curChar == 115)
                     jjstateSet[jjnewStateCnt++] = 313;
                  break;
               case 315:
                  if (curChar == 110)
                     jjstateSet[jjnewStateCnt++] = 314;
                  break;
               case 316:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 315;
                  break;
               case 317:
                  if (curChar == 114)
                     jjstateSet[jjnewStateCnt++] = 316;
                  break;
               case 318:
                  if (curChar == 102)
                     { jjAddStates(11, 13); }
                  break;
               case 319:
                  if (curChar == 115)
                     { jjCheckNAdd(308); }
                  break;
               case 320:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 319;
                  break;
               case 321:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 320;
                  break;
               case 322:
                  if (curChar == 111)
                     { jjCheckNAdd(201); }
                  break;
               case 323:
                  if (curChar == 111)
                     jjstateSet[jjnewStateCnt++] = 322;
                  break;
               case 324:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 323;
                  break;
               case 325:
                  if (curChar == 101)
                     { jjCheckNAdd(132); }
                  break;
               case 326:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 325;
                  break;
               case 327:
                  if (curChar == 116)
                     jjstateSet[jjnewStateCnt++] = 326;
                  break;
               case 328:
                  if (curChar == 97)
                     jjstateSet[jjnewStateCnt++] = 327;
                  break;
               case 329:
                  if (curChar == 108)
                     jjstateSet[jjnewStateCnt++] = 328;
                  break;
               case 330:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAddStates(5, 7); }
                  break;
               case 331:
                  if ((0x7fffffe87fffffeL & l) != 0L)
                     { jjCheckNAddTwoStates(331, 332); }
                  break;
               case 333:
               case 334:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 47)
                     kind = 47;
                  { jjCheckNAddTwoStates(332, 334); }
                  break;
               case 335:
                  if ((0x7fffffe87fffffeL & l) == 0L)
                     break;
                  if (kind > 65)
                     kind = 65;
                  { jjCheckNAdd(335); }
                  break;
               case 336:
                  if (curChar == 92)
                     { jjAddStates(8, 10); }
                  break;
               case 337:
                  if (curChar == 120)
                     jjstateSet[jjnewStateCnt++] = 338;
                  break;
               case 338:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 339;
                  break;
               case 339:
                  if ((0x7e0000007eL & l) != 0L && kind > 61)
                     kind = 61;
                  break;
               case 340:
                  if (curChar == 117)
                     jjstateSet[jjnewStateCnt++] = 341;
                  break;
               case 341:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 342;
                  break;
               case 342:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 343;
                  break;
               case 343:
               case 352:
                  if ((0x7e0000007eL & l) != 0L)
                     { jjCheckNAdd(344); }
                  break;
               case 344:
                  if ((0x7e0000007eL & l) != 0L && kind > 62)
                     kind = 62;
                  break;
               case 345:
                  if (curChar == 85)
                     jjstateSet[jjnewStateCnt++] = 346;
                  break;
               case 346:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 347;
                  break;
               case 347:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 348;
                  break;
               case 348:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 349;
                  break;
               case 349:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 350;
                  break;
               case 350:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 351;
                  break;
               case 351:
                  if ((0x7e0000007eL & l) != 0L)
                     jjstateSet[jjnewStateCnt++] = 352;
                  break;
               case 358:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(58, 59); }
                  break;
               case 362:
                  if ((0x2000000020L & l) != 0L)
                     { jjAddStates(60, 61); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 68:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(52, 53); }
                  break;
               case 71:
                  if ((jjbitVec0[i2] & l2) != 0L)
                     { jjAddStates(54, 55); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 365 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_3(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_3(int pos, long active0){
   return jjMoveNfa_3(jjStopStringLiteralDfa_3(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_3(){
   switch(curChar)
   {
      case 35:
         return jjStopAtPos(0, 3);
      default :
         return jjMoveNfa_3(1, 0);
   }
}
private int jjMoveNfa_3(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 5;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0xfffffffffffffbffL & l) != 0L)
                  {
                     if (kind > 5)
                        kind = 5;
                  }
                  if ((0x2400L & l) != 0L)
                  {
                     if (kind > 4)
                        kind = 4;
                  }
                  else if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                     { jjCheckNAdd(0); }
                  }
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 0:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  { jjCheckNAdd(0); }
                  break;
               case 2:
                  if (curChar == 10 && kind > 4)
                     kind = 4;
                  break;
               case 3:
                  if (curChar == 13)
                     jjstateSet[jjnewStateCnt++] = 2;
                  break;
               case 4:
                  if ((0xfffffffffffffbffL & l) != 0L && kind > 5)
                     kind = 5;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  kind = 5;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 5)
                     kind = 5;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 5 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_2(int pos, long active0){
   switch (pos)
   {
      default :
         return -1;
   }
}
private final int jjStartNfa_2(int pos, long active0){
   return jjMoveNfa_2(jjStopStringLiteralDfa_2(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_2(){
   switch(curChar)
   {
      case 35:
         return jjStopAtPos(0, 3);
      case 60:
         return jjMoveStringLiteralDfa1_2(0x4000000000000L);
      default :
         return jjMoveNfa_2(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_2(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 60:
         return jjMoveStringLiteralDfa2_2(active0, 0x4000000000000L);
      default :
         break;
   }
   return jjStartNfa_2(0, active0);
}
private int jjMoveStringLiteralDfa2_2(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_2(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_2(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 60:
         if ((active0 & 0x4000000000000L) != 0L)
            return jjStopAtPos(2, 50);
         break;
      default :
         break;
   }
   return jjStartNfa_2(1, active0);
}
private int jjMoveNfa_2(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 2;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
               case 0:
                  if ((0x100000200L & l) == 0L)
                     break;
                  kind = 2;
                  { jjCheckNAdd(0); }
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if (curChar == 123)
                     kind = 51;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 2 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}
private final int jjStopStringLiteralDfa_1(int pos, long active0){
   switch (pos)
   {
      case 0:
         if ((active0 & 0x40000000000000L) != 0L)
         {
            jjmatchedKind = 55;
            return -1;
         }
         return -1;
      case 1:
         if ((active0 & 0x40000000000000L) != 0L)
         {
            if (jjmatchedPos == 0)
            {
               jjmatchedKind = 55;
               jjmatchedPos = 0;
            }
            return -1;
         }
         return -1;
      default :
         return -1;
   }
}
private final int jjStartNfa_1(int pos, long active0){
   return jjMoveNfa_1(jjStopStringLiteralDfa_1(pos, active0), pos + 1);
}
private int jjMoveStringLiteralDfa0_1(){
   switch(curChar)
   {
      case 35:
         return jjStopAtPos(0, 3);
      case 62:
         return jjMoveStringLiteralDfa1_1(0x40000000000000L);
      default :
         return jjMoveNfa_1(1, 0);
   }
}
private int jjMoveStringLiteralDfa1_1(long active0){
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(0, active0);
      return 1;
   }
   switch(curChar)
   {
      case 62:
         return jjMoveStringLiteralDfa2_1(active0, 0x40000000000000L);
      default :
         break;
   }
   return jjStartNfa_1(0, active0);
}
private int jjMoveStringLiteralDfa2_1(long old0, long active0){
   if (((active0 &= old0)) == 0L)
      return jjStartNfa_1(0, old0);
   try { curChar = input_stream.readChar(); }
   catch(java.io.IOException e) {
      jjStopStringLiteralDfa_1(1, active0);
      return 2;
   }
   switch(curChar)
   {
      case 62:
         if ((active0 & 0x40000000000000L) != 0L)
            return jjStopAtPos(2, 54);
         break;
      default :
         break;
   }
   return jjStartNfa_1(1, active0);
}
private int jjMoveNfa_1(int startState, int curPos)
{
   int startsAt = 0;
   jjnewStateCnt = 4;
   int i = 1;
   jjstateSet[0] = startState;
   int kind = 0x7fffffff;
   for (;;)
   {
      if (++jjround == 0x7fffffff)
         ReInitRounds();
      if (curChar < 64)
      {
         long l = 1L << curChar;
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if (kind > 55)
                     kind = 55;
                  if ((0x100000200L & l) != 0L)
                  {
                     if (kind > 2)
                        kind = 2;
                     { jjCheckNAdd(0); }
                  }
                  break;
               case 0:
                  if ((0x100000200L & l) == 0L)
                     break;
                  if (kind > 2)
                     kind = 2;
                  { jjCheckNAdd(0); }
                  break;
               case 3:
                  if (kind > 55)
                     kind = 55;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else if (curChar < 128)
      {
         long l = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((0xd7ffffffffffffffL & l) != 0L)
                  {
                     if (kind > 55)
                        kind = 55;
                  }
                  else if (curChar == 125)
                  {
                     if (kind > 53)
                        kind = 53;
                  }
                  else if (curChar == 123)
                  {
                     if (kind > 52)
                        kind = 52;
                  }
                  break;
               case 2:
                  if (curChar == 125)
                     kind = 53;
                  break;
               case 3:
                  if ((0xd7ffffffffffffffL & l) != 0L)
                     kind = 55;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      else
      {
         int i2 = (curChar & 0xff) >> 6;
         long l2 = 1L << (curChar & 077);
         do
         {
            switch(jjstateSet[--i])
            {
               case 1:
                  if ((jjbitVec0[i2] & l2) != 0L && kind > 55)
                     kind = 55;
                  break;
               default : break;
            }
         } while(i != startsAt);
      }
      if (kind != 0x7fffffff)
      {
         jjmatchedKind = kind;
         jjmatchedPos = curPos;
         kind = 0x7fffffff;
      }
      ++curPos;
      if ((i = jjnewStateCnt) == (startsAt = 4 - (jjnewStateCnt = startsAt)))
         return curPos;
      try { curChar = input_stream.readChar(); }
      catch(java.io.IOException e) { return curPos; }
   }
}

/** Token literal values. */
public static final String[] jjstrLiteralImages = {
"", null, null, null, null, null, "\164\141\163\153", 
"\167\157\162\153\146\154\157\167", "\166\145\162\163\151\157\156", "\151\156\160\165\164", 
"\157\165\164\160\165\164", null, "\101\162\162\141\171", "\116\157\156\145", "\117\142\152\145\143\164", 
"\120\141\151\162", "\115\141\160", "\141\154\151\141\163", "\141\163", "\143\141\154\154", 
"\145\154\163\145", null, "\151\146", "\151\156", "\151\155\160\157\162\164", "\154\145\146\164", 
"\155\145\164\141", "\157\142\152\145\143\164", 
"\160\141\162\141\155\145\164\145\162\137\155\145\164\141", "\162\151\147\150\164", "\162\165\156\164\151\155\145", 
"\163\143\141\164\164\145\162", "\163\164\162\165\143\164", "\164\150\145\156", "\156\165\154\154", null, 
"\46\46", "\174\174", "\41", "\50", "\51", "\72", "\75", "\53", "\55", "\73", "\54", 
null, "\77", "\143\157\155\155\141\156\144", "\74\74\74", null, null, null, 
"\76\76\76", null, "\104\151\162\145\143\164\157\162\171", "\150\151\156\164\163", 
"\162\145\161\165\151\162\145\155\145\156\164\163", null, null, null, null, null, null, null, null, "\74", "\76", "\173", "\175", 
"\133", "\135", null, "\52", null, null, };
protected Token jjFillToken()
{
   final Token t;
   final String curTokenImage;
   final int beginLine;
   final int endLine;
   final int beginColumn;
   final int endColumn;
   String im = jjstrLiteralImages[jjmatchedKind];
   curTokenImage = (im == null) ? input_stream.GetImage() : im;
   beginLine = input_stream.getBeginLine();
   beginColumn = input_stream.getBeginColumn();
   endLine = input_stream.getEndLine();
   endColumn = input_stream.getEndColumn();
   t = Token.newToken(jjmatchedKind, curTokenImage);

   t.beginLine = beginLine;
   t.endLine = endLine;
   t.beginColumn = beginColumn;
   t.endColumn = endColumn;

   return t;
}
static final int[] jjnextStates = {
   354, 355, 356, 361, 362, 331, 332, 335, 337, 340, 345, 321, 324, 329, 310, 317, 
   303, 306, 293, 299, 287, 288, 242, 249, 256, 264, 274, 285, 194, 196, 200, 205, 
   215, 223, 227, 231, 232, 106, 116, 123, 131, 142, 150, 157, 163, 170, 179, 189, 
   192, 86, 89, 102, 68, 69, 71, 72, 81, 82, 359, 360, 363, 364, 
};

int curLexState = 0;
int defaultLexState = 0;
int jjnewStateCnt;
int jjround;
int jjmatchedPos;
int jjmatchedKind;

/** Get the next Token. */
public Token getNextToken() 
{
  Token specialToken = null;
  Token matchedToken;
  int curPos = 0;

  EOFLoop :
  for (;;)
  {
   try
   {
      curChar = input_stream.BeginToken();
   }
   catch(Exception e)
   {
      jjmatchedKind = 0;
      jjmatchedPos = -1;
      matchedToken = jjFillToken();
      matchedToken.specialToken = specialToken;
      return matchedToken;
   }
   image = jjimage;
   image.setLength(0);
   jjimageLen = 0;

   switch(curLexState)
   {
     case 0:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_0();
       break;
     case 1:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_1();
       break;
     case 2:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_2();
       break;
     case 3:
       jjmatchedKind = 0x7fffffff;
       jjmatchedPos = 0;
       curPos = jjMoveStringLiteralDfa0_3();
       break;
   }
     if (jjmatchedKind != 0x7fffffff)
     {
        if (jjmatchedPos + 1 < curPos)
           input_stream.backup(curPos - jjmatchedPos - 1);
        if ((jjtoToken[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
        {
           matchedToken = jjFillToken();
           matchedToken.specialToken = specialToken;
           TokenLexicalActions(matchedToken);
       if (jjnewLexState[jjmatchedKind] != -1)
         curLexState = jjnewLexState[jjmatchedKind];
           return matchedToken;
        }
        else
        {
           if ((jjtoSpecial[jjmatchedKind >> 6] & (1L << (jjmatchedKind & 077))) != 0L)
           {
              matchedToken = jjFillToken();
              if (specialToken == null)
                 specialToken = matchedToken;
              else
              {
                 matchedToken.specialToken = specialToken;
                 specialToken = (specialToken.next = matchedToken);
              }
              SkipLexicalActions(matchedToken);
           }
           else
              SkipLexicalActions(null);
         if (jjnewLexState[jjmatchedKind] != -1)
           curLexState = jjnewLexState[jjmatchedKind];
           continue EOFLoop;
        }
     }
     int error_line = input_stream.getEndLine();
     int error_column = input_stream.getEndColumn();
     String error_after = null;
     boolean EOFSeen = false;
     try { input_stream.readChar(); input_stream.backup(1); }
     catch (java.io.IOException e1) {
        EOFSeen = true;
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
        if (curChar == '\n' || curChar == '\r') {
           error_line++;
           error_column = 0;
        }
        else
           error_column++;
     }
     if (!EOFSeen) {
        input_stream.backup(1);
        error_after = curPos <= 1 ? "" : input_stream.GetImage();
     }
     throw new TokenMgrError(EOFSeen, curLexState, error_line, error_column, error_after, curChar, TokenMgrError.LEXICAL_ERROR);
  }
}

void SkipLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 3 :
         image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
          prevLexState = curLexState;
         break;
      case 4 :
         image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                        SwitchTo(prevLexState);
         break;
      default :
         break;
   }
}
void MoreLexicalActions()
{
   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);
   switch(jjmatchedKind)
   {
      default :
         break;
   }
}
void TokenLexicalActions(Token matchedToken)
{
   switch(jjmatchedKind)
   {
      case 50 :
        image.append(jjstrLiteralImages[50]);
        lengthOfMatch = jjstrLiteralImages[50].length();
                                  isHeredoc = true;
         break;
      case 51 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
 braceLevel+=1;
         break;
      case 52 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
                         braceLevel+=1;
         break;
      case 53 :
        image.append(input_stream.GetSuffix(jjimageLen + (lengthOfMatch = jjmatchedPos + 1)));
        braceLevel-=1;
        if (braceLevel == 0 && !isHeredoc)
        {
                isHeredoc = false;
                SwitchTo(DEFAULT);
        }
         break;
      default :
         break;
   }
}
private void jjCheckNAdd(int state)
{
   if (jjrounds[state] != jjround)
   {
      jjstateSet[jjnewStateCnt++] = state;
      jjrounds[state] = jjround;
   }
}
private void jjAddStates(int start, int end)
{
   do {
      jjstateSet[jjnewStateCnt++] = jjnextStates[start];
   } while (start++ != end);
}
private void jjCheckNAddTwoStates(int state1, int state2)
{
   jjCheckNAdd(state1);
   jjCheckNAdd(state2);
}

private void jjCheckNAddStates(int start, int end)
{
   do {
      jjCheckNAdd(jjnextStates[start]);
   } while (start++ != end);
}

    /** Constructor. */
    public WDLParserTokenManager(SimpleCharStream stream){

      if (SimpleCharStream.staticFlag)
            throw new Error("ERROR: Cannot use a static CharStream class with a non-static lexical analyzer.");

    input_stream = stream;
  }

  /** Constructor. */
  public WDLParserTokenManager (SimpleCharStream stream, int lexState){
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Reinitialise parser. */
  
  public void ReInit(SimpleCharStream stream)
  {


    jjmatchedPos =
    jjnewStateCnt =
    0;
    curLexState = defaultLexState;
    input_stream = stream;
    ReInitRounds();
  }

  private void ReInitRounds()
  {
    int i;
    jjround = 0x80000001;
    for (i = 365; i-- > 0;)
      jjrounds[i] = 0x80000000;
  }

  /** Reinitialise parser. */
  public void ReInit(SimpleCharStream stream, int lexState)
  
  {
    ReInit(stream);
    SwitchTo(lexState);
  }

  /** Switch to specified lex state. */
  public void SwitchTo(int lexState)
  {
    if (lexState >= 4 || lexState < 0)
      throw new TokenMgrError("Error: Ignoring invalid lexical state : " + lexState + ". State unchanged.", TokenMgrError.INVALID_LEXICAL_STATE);
    else
      curLexState = lexState;
  }


/** Lexer state names. */
public static final String[] lexStateNames = {
   "DEFAULT",
   "BASH_STRING",
   "BASH_COMMAND",
   "ML_COMMENT",
};

/** Lex State array. */
public static final int[] jjnewLexState = {
   -1, -1, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 2, 
   1, 1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 
   -1, -1, 
};
static final long[] jjtoToken = {
   0x7fffffffffffffc1L, 0x17feL, 
};
static final long[] jjtoSkip = {
   0x3eL, 0x0L, 
};
static final long[] jjtoSpecial = {
   0x3eL, 0x0L, 
};
static final long[] jjtoMore = {
   0x0L, 0x0L, 
};
    protected SimpleCharStream  input_stream;

    private final int[] jjrounds = new int[365];
    private final int[] jjstateSet = new int[2 * 365];
    private final StringBuilder jjimage = new StringBuilder();
    private StringBuilder image = jjimage;
    private int jjimageLen;
    private int lengthOfMatch;
    protected int curChar;
}
